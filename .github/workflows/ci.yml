name: ci

on: [push, pull_request]

env:
  CI: true
  PGHOST: localhost
  PGPORT: 5432
  PGUSER: postgres
  PGPASSWORD: postgres

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: ${{ matrix.pg }}
        env:
          POSTGRES_PASSWORD: postgres
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    strategy:
      matrix:
        pg: ["postgres:13-alpine", "postgres:14-alpine", "postgres:15-alpine", "postgres:16-alpine", "postgres:17-alpine"]

    steps:
      - uses: actions/checkout@v4

      - name: Run tests
        run: |
          make run_test

      - name: Run tests no check
        run: |
          make run_test_nochecks

      - name: Run Node.js e2e Tests
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
      - run: npm ci
      - run: npm run build --if-present
      - run: npm run test:e2e:runner
